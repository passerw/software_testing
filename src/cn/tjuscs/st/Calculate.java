package cn.tjuscs.st;

public class Calculate {
	// 1张50元，1张20元，2张5元，3枚1元硬币，试着解答能否用这些钱币凑出给定值
	// 1代表可以，0代表不可以。
	public int check(int x) {
		int can = 0; // 返回值
		// 所有钱币的总面额是83元，所以能凑出的范围是1~83元
		if (x < 1 || x > 83) {
			can = 0;
		} else if ((x % 10) == 4 || (x % 10) == 9) {
			// 用5元纸币和1元硬币可以凑出的面额个位数可能是0,1,2,3,5,6,7,8，
			// 因此尾数为4,9的面额不可能凑出
			can = 0;
		} else if ((x / 10) == 4) {
			// 1张50元，一张20元，2张5元，凑出的十位数的可能是0,1,2,3,5,6,7,8
			// 因此十位数为4的面额无法凑出
			can = 0;
		} else if (((x / 10) == 3) && ((x % 10) >= 5)) {
			// 当尾数大于等于5时，需要用到一张5元，这时十位数的面额不能是3和8,
			// 由于十位数为8，尾数大于5的面额同样大于83，所以第一个条件排除了
			// 这个面额
			can = 0;
		} else {
			can = 1;
		}
		return can;
	}
}
